<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>Nest Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/assets/imgs/theme/favicon.svg" />
    <!-- Template CSS -->
    <link href="/assets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
</head>

<body>
    <main>
        <header class="main-header style-2 navbar">
            <div class="col-brand">
                <a href="index.html" class="brand-wrap">
                    <img src="/assets/imgs/theme/logo.svg" class="logo" alt="Nest Dashboard" />
                </a>
            </div>
        </header>
        <section class="content-main mt-80 mb-80">
            <div class="card mx-auto card-login">
                <div class="card-body">
                    <h4 class="card-title mb-4">Patient Register</h4>
                    <form id="registerForm">
                        <div class="mb-3">
                            <label for="patient_name" class="form-label">Full Name</label>
                            <input class="form-control" id="patient_name" placeholder="Full Name" type="text" />
                            <small id="nameError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="patient_dob" class="form-label">Date of Birth</label>
                            <input class="form-control" id="patient_dob" placeholder="Date of Birth (YYYY-MM-DD)" type="date" />
                            <small id="dobError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="patient_age" class="form-label">Age</label>
                            <input class="form-control" id="patient_age" placeholder="Age" type="number" />
                            <small id="ageError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="patient_gender" class="form-label">Gender</label>
                            <select class="form-control" id="patient_gender">
                                <option value="">Select Gender</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Other">Other</option>
                            </select>
                            <small id="genderError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="blood_group" class="form-label">Blood Group</label>
                            <select class="form-control" id="blood_group">
                                <option value="">Select Blood Group</option>
                                <option value="A+">A+</option>
                                <option value="A-">A-</option>
                                <option value="B+">B+</option>
                                <option value="B-">B-</option>
                                <option value="O+">O+</option>
                                <option value="O-">O-</option>
                                <option value="AB+">AB+</option>
                                <option value="AB-">AB-</option>
                            </select>
                            <small id="bloodGroupError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="weight" class="form-label">Weight (kg)</label>
                            <input class="form-control" id="weight" placeholder="Weight (kg)" type="number" step="0.1" />
                        </div>
                    
                        <div class="mb-3">
                            <label for="height" class="form-label">Height (cm)</label>
                            <input class="form-control" id="height" placeholder="Height (cm)" type="number" step="0.1" />
                        </div>
                    
                        <div class="mb-3">
                            <label for="contact_number" class="form-label">Contact Number</label>
                            <input class="form-control" id="contact_number" placeholder="Contact Number" type="text" />
                            <small id="contactError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input class="form-control" id="username" placeholder="Username" type="text" />
                            <small id="usernameError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input class="form-control" id="password" placeholder="Password" type="password" />
                            <small id="passwordError" class="text-danger"></small>
                        </div>
                    
                        <div class="mb-3">
                            <label for="address" class="form-label">Address</label>
                            <textarea class="form-control" id="address" placeholder="Address"></textarea>
                        </div>
                    
                        <div class="row">
                            <div class="col-md-9">
                                <div class="mb-4">
                                    <label for="imageInput" class="form-label">Upload Images</label>
                                    <div class="card-body">
                                        <div class="input-upload">
                                            <input id="imageInput" class="form-control" type="file" accept="image/*" multiple>
                                        </div>
                                        <div id="imagePreviewContainer" class="mt-3"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    
                        <div class="mb-4">
                            <button type="submit" class="btn btn-primary w-100">Register</button>
                        </div>
                    </form>
                    

                    <p class="text-center mb-4">
                        Already have an account? <a href="/api/patient_login_view">Login</a>
                    </p>
                </div>
            </div>
        </section>
        <footer class="main-footer text-center">
            <p class="font-xs">
                <script>
                    document.write(new Date().getFullYear());
                </script>
                &copy; Nest - HTML Ecommerce Template .
            </p>
            <p class="font-xs mb-30">All rights reserved</p>
        </footer>
    </main>
    <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js?v=1.1" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

        let selectedImages = []; // Store selected images

        document.getElementById('imageInput').addEventListener('change', function (event) {
            const files = Array.from(event.target.files);

            if (files.length > 0) {
                const previewContainer = document.getElementById('imagePreviewContainer');

                files.forEach(file => {
                    if (selectedImages.some(img => img.name === file.name && img.size === file.size)) {
                        return; // Prevent duplicate files
                    }

                    selectedImages.push(file);

                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const imageContainer = document.createElement('div');
                        imageContainer.classList.add('position-relative', 'd-inline-block', 'p-2', 'border', 'rounded', 'me-2');

                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.classList.add('rounded', 'shadow', 'img-thumbnail');
                        img.style.width = '100px';
                        img.style.height = '100px';
                        img.style.objectFit = 'cover';

                        const deleteBtn = document.createElement('button');
                        deleteBtn.innerHTML = 'âœ–';
                        deleteBtn.classList.add('btn', 'btn-danger', 'btn-sm', 'position-absolute', 'top-0', 'end-0', 'rounded-circle');
                        deleteBtn.style.transform = 'translate(50%, -50%)';
                        deleteBtn.style.padding = '2px 5px';
                        deleteBtn.style.fontSize = '12px';

                        deleteBtn.addEventListener('click', function () {
                            imageContainer.remove();
                            selectedImages = selectedImages.filter(imgFile => imgFile !== file);
                        });

                        imageContainer.appendChild(img);
                        imageContainer.appendChild(deleteBtn);
                        previewContainer.appendChild(imageContainer);
                    };
                    reader.readAsDataURL(file);
                });

                event.target.value = ""; // Reset input to allow re-selection
            }
        });


        document.getElementById("registerForm").addEventListener("submit", function (event) {
            event.preventDefault();
            console.log('submit');
            

            let patient_name = document.getElementById("patient_name").value.trim();
            let patient_dob = document.getElementById("patient_dob").value;
            let patient_age = document.getElementById("patient_age").value.trim();
            let patient_gender = document.getElementById("patient_gender").value.trim();
            let blood_group = document.getElementById("blood_group").value;
            let weight = document.getElementById("weight").value.trim();
            let height = document.getElementById("height").value.trim();
            let contact_number = document.getElementById("contact_number").value.trim();
            let username = document.getElementById("username").value.trim();
            let password = document.getElementById("password").value.trim();
            let address = document.getElementById("address").value.trim();

            let nameError = document.getElementById("nameError");
            let dobError = document.getElementById("dobError");
            let ageError = document.getElementById("ageError");
            let genderError = document.getElementById("genderError");
            let bloodGroupError = document.getElementById("bloodGroupError");
            let contactError = document.getElementById("contactError");
            let usernameError = document.getElementById("usernameError");
            let passwordError = document.getElementById("passwordError");

            // Clear previous errors
            nameError.innerText = "";
            dobError.innerText = "";
            ageError.innerText = "";
            genderError.innerText = "";
            bloodGroupError.innerText = "";
            contactError.innerText = "";
            usernameError.innerText = "";
            passwordError.innerText = "";

            let isValid = true;

            // Validate Full Name
            if (patient_name === "") {
                nameError.innerText = "Full name is required";
                isValid = false;
            }

            // Validate DOB and Auto-calculate Age
            if (patient_dob === "") {
                dobError.innerText = "Date of birth is required";
                isValid = false;
            } else {
                let dob = new Date(patient_dob);
                let today = new Date();
                let age = today.getFullYear() - dob.getFullYear();
                let monthDiff = today.getMonth() - dob.getMonth();

                if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {
                    age--;
                }

                if (age < -1) {
                    dobError.innerText = "Invalid date of birth";
                    isValid = false;
                } else {
                    patient_age.value = age;
                }
            }

            // Validate Gender
            if (patient_gender === "") {
                genderError.innerText = "Gender is required";
                isValid = false;
            }

            // Validate Contact Number
            if (contact_number === "") {
                contactError.innerText = "Contact number is required";
                isValid = false;
            } else if (!/^\d{10,15}$/.test(contact_number)) {
                contactError.innerText = "Enter a valid contact number";
                isValid = false;
            }

            // Validate Username
            if (username === "") {
                usernameError.innerText = "Username is required";
                isValid = false;
            }

            // Validate Password
            if (password === "") {
                passwordError.innerText = "Password must be at least 6 characters long";
                isValid = false;
            }

            console.log(isValid);
            
            if (!isValid) return;

            const formData = new FormData();
            formData.append('patient_name', patient_name);
            formData.append('patient_dob', patient_dob);
            formData.append('patient_age', patient_age);
            formData.append('patient_gender', username);
            formData.append('blood_group', blood_group);
            formData.append('weight', weight);
            formData.append('height', height);
            formData.append('contact_number', contact_number);
            formData.append('username', username);
            formData.append('password', password);
            formData.append('address', address);

            // Append selected images
            selectedImages.forEach(file => formData.append('attachments', file));

            console.log('formdatas');
            
            // Submit Form
            fetch("/api/patient_register", {
                method: "POST",
                body: formData
            })
                .then((response) => response.json())
                .then((data) => {
                    if (data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Registration Successful",
                            text: "Redirecting to login...",
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = "/api/patient_login_view";
                        });
                    } else {
                        Swal.fire("Error", data.message, "error");
                    }
                })
                .catch((error) => {
                    console.error("Error:", error);
                    Swal.fire("Error", "Something went wrong", "error");
                });
        });

        // Auto-calculate age when DOB is selected
        document.getElementById("patient_dob").addEventListener("change", function () {
            let dob = new Date(this.value);
            let today = new Date();
            let age = today.getFullYear() - dob.getFullYear();
            let monthDiff = today.getMonth() - dob.getMonth();

            if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {
                age--;
            }

            if (age > -1) {
                document.getElementById("patient_age").value = age;
            } else {
                document.getElementById("ageError").innerText = "Invalid date of birth";
            }
        });
    </script>


</body>

</html>